
#SPRING CONFIG 
spring.profiles.active=default
#spring.config.name= # config file name (default to 'application')
#spring.config.location= # location of config file

# IDENTITY
#spring.application.name=

# LOGGING
# directory for log files to live in
logging.path=${user.dir}/logs
# logback config file path
logging.config=file:config/logback.xml

# EMBEDDED SERVER CONFIGURATION
server.port=9000
# bind to a specific NIC
#server.address=
# session timeout in seconds
#server.session-timeout=
# the context path, defaults to '/'
#server.context-path= 
# the servlet path, defaults to '/'
#server.servlet-path= 

# JMX
# Expose MBeans from Spring
spring.jmx.enabled=true

# MANAGEMENT HTTP SERVER
# HTTP port to expose management endpoints, defaults to 'server.port'. Set it to '-1' to disable
management.port=9000
# address that the management endpoints are available on
#management.address=
# default to '/'
#management.contextPah=

# JDBC
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect